<Window x:Class="Launcher.WindowProfiles"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Launcher"
        xmlns:viewModels="clr-namespace:Launcher.ViewModels"
        mc:Ignorable="d" ResizeMode="NoResize" 
        AllowsTransparency="True" Background="Transparent"
        WindowStyle="None" WindowStartupLocation="CenterScreen"
        KeyDown="Window_KeyDown"
        Title="WindowProfiles" Height="500" Width="450" Loaded="Window_Loaded">
    <Window.DataContext>
        <viewModels:ProfilesViewModel/>
    </Window.DataContext>
    <Window.Resources>
    
        <SolidColorBrush x:Key="MainForeGround" Color="White"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Black"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#303030"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#303030"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#303030"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#303030"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Gray"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Gray"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="WindowProfileButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="MainGridBgColor" Color="#202427"/>

        <Storyboard x:Key="CloseBtnMouseEnterStory">
            <ColorAnimation From="Black" To="Gray" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"  />
        </Storyboard>

        <Storyboard x:Key="CloseBtnMouseLeaveStory">
            <ColorAnimation From="Gray" To="Black" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"  />
        </Storyboard>


        <SolidColorBrush x:Key="LoadNewsRect" Color="Gray" Opacity="0.10"/>
        <Style x:Key="FocusVisual5">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background5" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border5" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background5" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border5" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background5" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border5" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background5" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border5" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground5" Color="#FF838383"/>
        <Style x:Key="CMButtonsStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual5}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background5}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border5}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ContextMenuStyle1" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" BorderThickness="0" CornerRadius="0" Background="White">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ContextMenu x:Key="ButtonContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="LabelContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="TextBoxContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="GridContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="TextBlockContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="ProgressBarContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="ComboBoxContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>

        <ContextMenu x:Key="BorderContextMenu" Style="{DynamicResource ContextMenuStyle1}">
            <MenuItem Header="Сменить цвета" Click="ChangeColorControlMenuItem_Click"/>
        </ContextMenu>
    </Window.Resources>

    <Grid>
        <Border x:Name="MainGrid" Background="{DynamicResource MainGridBgColor}" CornerRadius="30" Height="400" Margin="0,0,0,0" ContextMenu="{DynamicResource GridContextMenu}">
            <Grid Tag="UC" Background="Transparent">
                <Grid x:Name="ProfilesContainerGrid" Tag="UC" Margin="0,50,0,0" HorizontalAlignment="Center" Width="440">
                    <Grid.ColumnDefinitions>
                        <!--<ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="1000"/>-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="Row1" Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock x:Name="ProfileNameTextBlock" Grid.Row="0" Text="Profile Name" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Left" Width="90" Foreground="{DynamicResource MainForeGround}"                      ContextMenu="{DynamicResource TextBlockContextMenu}"/>
                    <TextBlock x:Name="ProfileServerTextBlock" Grid.Row="0" Text="Server" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Left" Width="90" Foreground="{DynamicResource MainForeGround}" Margin="150,0,0,0"       ContextMenu="{DynamicResource TextBlockContextMenu}"/>
                    <TextBlock x:Name="ProfileNickNameTextBlock" Grid.Row="0" Text="Nickname" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Left" Width="140" Foreground="{DynamicResource MainForeGround}" Margin="300,0,0,0"  ContextMenu="{DynamicResource TextBlockContextMenu}"/>
                </Grid>

                <Button x:Name="CloseButton" Style="{DynamicResource CMButtonsStyle}" Content="X" Tag="UC" Background="#353535" Foreground="#FFFF" BorderThickness="0" Margin="381,16,35,350"  Click="CloseBorderButton_Click" 
                        MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
                        ContextMenu="{DynamicResource ButtonContextMenu}">
                </Button>
                <Button x:Name="PickProfileButton" Style="{DynamicResource WindowProfileButton}" Background="#353535" Foreground="White" Content="{Binding PickBtnText}" HorizontalAlignment="Left" Width="60" Margin="363,0,0,40" VerticalAlignment="Bottom" Click="PickProfileButton_Click"
                        MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
                        ContextMenu="{DynamicResource ButtonContextMenu}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button x:Name="CancelProfileButton" Style="{DynamicResource WindowProfileButton}" Background="#353535" Foreground="White" Content="{Binding CancelBtnText}" HorizontalAlignment="Left" Width="60" Margin="170,0,0,40" VerticalAlignment="Bottom" Click="CancelProfileButton_Click"
                        MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
                        ContextMenu="{DynamicResource ButtonContextMenu}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button x:Name="AddProfileButton" Style="{DynamicResource WindowProfileButton}" Background="#353535" Foreground="White" Content="{Binding AddBtnText}" HorizontalAlignment="Left" Width="60" Margin="300,0,0,40" VerticalAlignment="Bottom" Click="AddProfileButton_Click"
                        MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
                        ContextMenu="{DynamicResource ButtonContextMenu}" >
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Button x:Name="DeleteProfileButton" Style="{DynamicResource WindowProfileButton}" Background="#353535" Foreground="White" Content="{Binding DeleteBtnText}" HorizontalAlignment="Left" Width="60" Margin="235,0,0,40" VerticalAlignment="Bottom" Click="DeleteProfileButton_Click"
                        MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave"
                         ContextMenu="{DynamicResource ButtonContextMenu}">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <Label x:Name="ProfileWinLabel" Content="{Binding UserProfilesText}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Top" Width="92" Margin="0,19,0,0"
                       ContextMenu="{DynamicResource LabelContextMenu}"/>
            </Grid>
        </Border>
    </Grid>
</Window>
